<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.9">
  <compounddef id="namespaceXapian_1_1Auto" kind="namespace">
    <compoundname>Xapian::Auto</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceXapian_1_1Auto_1061dd41e3c877bf094251d25975fe3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classXapian_1_1Database" kindref="compound">Database</ref></type>
        <definition>Database Xapian::Auto::open_stub</definition>
        <argsstring>(const std::string &amp;file)</argsstring>
        <name>open_stub</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classXapian_1_1Database" kindref="compound">Database</ref> object for a stub database file. </para>        </briefdescription>
        <detaileddescription>
<para>The stub database file contains serialised parameters for one or more databases.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>pathname of the stub database file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/dbfactory.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="namespaceXapian_1_1Auto_1299894005d7f0996d113d87da285ea8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classXapian_1_1WritableDatabase" kindref="compound">WritableDatabase</ref></type>
        <definition>WritableDatabase Xapian::Auto::open_stub</definition>
        <argsstring>(const std::string &amp;file, int action)</argsstring>
        <name>open_stub</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classXapian_1_1WritableDatabase" kindref="compound">WritableDatabase</ref> object for a stub database file. </para>        </briefdescription>
        <detaileddescription>
<para>The stub database file must contain serialised parameters for exactly one database.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>pathname of the stub database file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/dbfactory.h" line="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classXapian_1_1Database" kindref="compound">Database</ref> factory functions which determine the database type automatically. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/xapiandev/letor/xapian-core/include/xapian/dbfactory.h" line="45"/>
  </compounddef>
</doxygen>
