<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.9">
  <compounddef id="classXapian_1_1ValuePostingSource" kind="class" prot="public">
    <compoundname>Xapian::ValuePostingSource</compoundname>
    <basecompoundref refid="classXapian_1_1PostingSource" prot="public" virt="non-virtual">Xapian::PostingSource</basecompoundref>
    <derivedcompoundref refid="classXapian_1_1ValueMapPostingSource" prot="public" virt="non-virtual">Xapian::ValueMapPostingSource</derivedcompoundref>
    <derivedcompoundref refid="classXapian_1_1ValueWeightPostingSource" prot="public" virt="non-virtual">Xapian::ValueWeightPostingSource</derivedcompoundref>
    <includes local="no">postingsource.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classXapian_1_1ValuePostingSource_124ed690d4249ce0929a1a1ff236124f1" prot="protected" static="no" mutable="no">
        <type><ref refid="classXapian_1_1Database" kindref="compound">Xapian::Database</ref></type>
        <definition>Xapian::Database Xapian::ValuePostingSource::db</definition>
        <argsstring></argsstring>
        <name>db</name>
        <briefdescription>
<para>The database we&apos;re reading values from. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="333" bodyfile="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXapian_1_1ValuePostingSource_1efd7cda358e1dc81ccd72bfe7b0f940c" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceXapian_194a899651fa920c72ffa9635bde630ea" kindref="member">Xapian::valueno</ref></type>
        <definition>Xapian::valueno Xapian::ValuePostingSource::slot</definition>
        <argsstring></argsstring>
        <name>slot</name>
        <briefdescription>
<para>The slot we&apos;re reading values from. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="336" bodyfile="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXapian_1_1ValuePostingSource_1ddc0e75dc4ad4cfcf1f2d807bc3b32c4" prot="protected" static="no" mutable="no">
        <type><ref refid="classXapian_1_1ValueIterator" kindref="compound">Xapian::ValueIterator</ref></type>
        <definition>Xapian::ValueIterator Xapian::ValuePostingSource::value_it</definition>
        <argsstring></argsstring>
        <name>value_it</name>
        <briefdescription>
<para>Value stream iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="339" bodyfile="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXapian_1_1ValuePostingSource_1f961be7d3dcc2eb8b9e70744ce2c7597" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Xapian::ValuePostingSource::started</definition>
        <argsstring></argsstring>
        <name>started</name>
        <briefdescription>
<para>Flag indicating if we&apos;ve started (true if we have). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="342" bodyfile="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXapian_1_1ValuePostingSource_130f64f26a6faddc3f24b8c00e2ba5d0b" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceXapian_17f30aa95f0c42b117dafaf66ba24241d" kindref="member">Xapian::doccount</ref></type>
        <definition>Xapian::doccount Xapian::ValuePostingSource::termfreq_min</definition>
        <argsstring></argsstring>
        <name>termfreq_min</name>
        <briefdescription>
<para>A lower bound on the term frequency. </para>        </briefdescription>
        <detaileddescription>
<para>Subclasses should set this if they are overriding the <ref refid="classXapian_1_1ValuePostingSource_187b22aac8422f80124b50a456d1d85b0" kindref="member">next()</ref>, <ref refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" kindref="member">skip_to()</ref> or <ref refid="classXapian_1_1ValuePostingSource_171868e54627098425820f7a76e259197" kindref="member">check()</ref> methods to return fewer documents. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="349" bodyfile="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXapian_1_1ValuePostingSource_1b9b4cc08e1ba2da73f059b2312ae3986" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceXapian_17f30aa95f0c42b117dafaf66ba24241d" kindref="member">Xapian::doccount</ref></type>
        <definition>Xapian::doccount Xapian::ValuePostingSource::termfreq_est</definition>
        <argsstring></argsstring>
        <name>termfreq_est</name>
        <briefdescription>
<para>An estimate of the term frequency. </para>        </briefdescription>
        <detaileddescription>
<para>Subclasses should set this if they are overriding the <ref refid="classXapian_1_1ValuePostingSource_187b22aac8422f80124b50a456d1d85b0" kindref="member">next()</ref>, <ref refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" kindref="member">skip_to()</ref> or <ref refid="classXapian_1_1ValuePostingSource_171868e54627098425820f7a76e259197" kindref="member">check()</ref> methods. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="356" bodyfile="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXapian_1_1ValuePostingSource_13a7be278e6615876d57a254a60826c2f" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceXapian_17f30aa95f0c42b117dafaf66ba24241d" kindref="member">Xapian::doccount</ref></type>
        <definition>Xapian::doccount Xapian::ValuePostingSource::termfreq_max</definition>
        <argsstring></argsstring>
        <name>termfreq_max</name>
        <briefdescription>
<para>An upper bound on the term frequency. </para>        </briefdescription>
        <detaileddescription>
<para>Subclasses should set this if they are overriding the <ref refid="classXapian_1_1ValuePostingSource_187b22aac8422f80124b50a456d1d85b0" kindref="member">next()</ref>, <ref refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" kindref="member">skip_to()</ref> or <ref refid="classXapian_1_1ValuePostingSource_171868e54627098425820f7a76e259197" kindref="member">check()</ref> methods. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="363" bodyfile="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_1ccbffc6b7f573e9a41fc234a410a1ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Xapian::ValuePostingSource::ValuePostingSource</definition>
        <argsstring>(Xapian::valueno slot_)</argsstring>
        <name>ValuePostingSource</name>
        <param>
          <type><ref refid="namespaceXapian_194a899651fa920c72ffa9635bde630ea" kindref="member">Xapian::valueno</ref></type>
          <declname>slot_</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classXapian_1_1ValuePostingSource" kindref="compound">ValuePostingSource</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot_</parametername>
</parameternamelist>
<parameterdescription>
<para>The value slot to read values from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="370"/>
      </memberdef>
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_173743991ef0f5a2818d56c94e9e019f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceXapian_17f30aa95f0c42b117dafaf66ba24241d" kindref="member">Xapian::doccount</ref></type>
        <definition>Xapian::doccount Xapian::ValuePostingSource::get_termfreq_min</definition>
        <argsstring>() const </argsstring>
        <name>get_termfreq_min</name>
        <reimplements refid="classXapian_1_1PostingSource_15ecf450314e8b266eb9c8fae78e141d3">get_termfreq_min</reimplements>
        <briefdescription>
<para>A lower bound on the number of documents this object can return. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="namespaceXapian" kindref="compound">Xapian</ref> will always call <ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref> on a <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> before calling this for the first time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="372"/>
      </memberdef>
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_1dd937d003f986ff60119bffbac277d76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceXapian_17f30aa95f0c42b117dafaf66ba24241d" kindref="member">Xapian::doccount</ref></type>
        <definition>Xapian::doccount Xapian::ValuePostingSource::get_termfreq_est</definition>
        <argsstring>() const </argsstring>
        <name>get_termfreq_est</name>
        <reimplements refid="classXapian_1_1PostingSource_10d67eda5783f82951d6c56ad7ff4205b">get_termfreq_est</reimplements>
        <briefdescription>
<para>An estimate of the number of documents this object can return. </para>        </briefdescription>
        <detaileddescription>
<para>It must always be true that:</para><para><ref refid="classXapian_1_1ValuePostingSource_173743991ef0f5a2818d56c94e9e019f4" kindref="member">get_termfreq_min()</ref> &lt;= <ref refid="classXapian_1_1ValuePostingSource_1dd937d003f986ff60119bffbac277d76" kindref="member">get_termfreq_est()</ref> &lt;= <ref refid="classXapian_1_1ValuePostingSource_1c71b845c832955fe708d9ad6dbcf87e5" kindref="member">get_termfreq_max()</ref></para><para><ref refid="namespaceXapian" kindref="compound">Xapian</ref> will always call <ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref> on a <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> before calling this for the first time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="373"/>
      </memberdef>
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_1c71b845c832955fe708d9ad6dbcf87e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceXapian_17f30aa95f0c42b117dafaf66ba24241d" kindref="member">Xapian::doccount</ref></type>
        <definition>Xapian::doccount Xapian::ValuePostingSource::get_termfreq_max</definition>
        <argsstring>() const </argsstring>
        <name>get_termfreq_max</name>
        <reimplements refid="classXapian_1_1PostingSource_117de27c84a052c51d62ad498151a4cab">get_termfreq_max</reimplements>
        <briefdescription>
<para>An upper bound on the number of documents this object can return. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="namespaceXapian" kindref="compound">Xapian</ref> will always call <ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref> on a <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> before calling this for the first time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="374"/>
      </memberdef>
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_187b22aac8422f80124b50a456d1d85b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Xapian::ValuePostingSource::next</definition>
        <argsstring>(Xapian::weight min_wt)</argsstring>
        <name>next</name>
        <reimplements refid="classXapian_1_1PostingSource_1fd0261e7b428c2a25245da07170e9635">next</reimplements>
        <reimplementedby refid="classXapian_1_1DecreasingValueWeightPostingSource_1ef2944c8ef7812185907af383a3747f2">next</reimplementedby>
        <param>
          <type><ref refid="namespaceXapian_1cac12803afc9e24ee5141c119acb8884" kindref="member">Xapian::weight</ref></type>
          <declname>min_wt</declname>
        </param>
        <briefdescription>
<para>Advance the current position to the next matching document. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> starts before the first entry in the list, so <ref refid="classXapian_1_1ValuePostingSource_187b22aac8422f80124b50a456d1d85b0" kindref="member">next()</ref> must be called before any methods which need the context of the current position.</para><para><ref refid="namespaceXapian" kindref="compound">Xapian</ref> will always call <ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref> on a <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> before calling this for the first time.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min_wt</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum weight contribution that is needed (this is just a hint which subclasses may ignore). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="376"/>
      </memberdef>
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Xapian::ValuePostingSource::skip_to</definition>
        <argsstring>(Xapian::docid min_docid, Xapian::weight min_wt)</argsstring>
        <name>skip_to</name>
        <reimplements refid="classXapian_1_1PostingSource_102e3f5e29a0605d7f9e0a09decbdd9bf">skip_to</reimplements>
        <reimplementedby refid="classXapian_1_1DecreasingValueWeightPostingSource_1e32da549e3042739f2954233c7a9bb3c">skip_to</reimplementedby>
        <param>
          <type><ref refid="namespaceXapian_18fa9094bebe1256a7be935a5ede87a64" kindref="member">Xapian::docid</ref></type>
          <declname>did</declname>
        </param>
        <param>
          <type><ref refid="namespaceXapian_1cac12803afc9e24ee5141c119acb8884" kindref="member">Xapian::weight</ref></type>
          <declname>min_wt</declname>
        </param>
        <briefdescription>
<para>Advance to the specified docid. </para>        </briefdescription>
        <detaileddescription>
<para>If the specified docid isn&apos;t in the list, position ourselves on the first document after it (or <ref refid="classXapian_1_1ValuePostingSource_14bb7ea314dbd569f90f89731204cdc40" kindref="member">at_end()</ref> if no greater docids are present).</para><para>If the current position is already the specified docid, this method will leave the position unmodified.</para><para>If the specified docid is earlier than the current position, the behaviour is unspecified. A sensible behaviour would be to leave the current position unmodified, but it is also reasonable to move to the specified docid.</para><para>The default implementation calls <ref refid="classXapian_1_1ValuePostingSource_187b22aac8422f80124b50a456d1d85b0" kindref="member">next()</ref> repeatedly, which works but <ref refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" kindref="member">skip_to()</ref> can often be implemented much more efficiently.</para><para><ref refid="namespaceXapian" kindref="compound">Xapian</ref> will always call <ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref> on a <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> before calling this for the first time.</para><para>Note: in the case of a multi-database search, the docid specified is the docid in the single subdatabase relevant to this posting source. See the <emphasis><ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref></emphasis> method for details.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min_wt</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum weight contribution that is needed (this is just a hint which subclasses may ignore). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="377"/>
      </memberdef>
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_171868e54627098425820f7a76e259197" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Xapian::ValuePostingSource::check</definition>
        <argsstring>(Xapian::docid min_docid, Xapian::weight min_wt)</argsstring>
        <name>check</name>
        <reimplements refid="classXapian_1_1PostingSource_192098dee93d09781bb5ad48e86434873">check</reimplements>
        <reimplementedby refid="classXapian_1_1DecreasingValueWeightPostingSource_13ae07f1c25d3b71f437a7cb63a342d5c">check</reimplementedby>
        <param>
          <type><ref refid="namespaceXapian_18fa9094bebe1256a7be935a5ede87a64" kindref="member">Xapian::docid</ref></type>
          <declname>did</declname>
        </param>
        <param>
          <type><ref refid="namespaceXapian_1cac12803afc9e24ee5141c119acb8884" kindref="member">Xapian::weight</ref></type>
          <declname>min_wt</declname>
        </param>
        <briefdescription>
<para>Check if the specified docid occurs. </para>        </briefdescription>
        <detaileddescription>
<para>The caller is required to ensure that the specified document id <emphasis>did</emphasis> actually exists in the database. If it does, it must move to that document id, and return true. If it does not, it may either:</para><para><itemizedlist>
<listitem><para>return true, having moved to a definite position (including &quot;at_end&quot;), which must be the same position as <ref refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" kindref="member">skip_to()</ref> would have moved to.</para></listitem></itemizedlist>
</para><para>or</para><para><itemizedlist>
<listitem><para>return false, having moved to an &quot;indeterminate&quot; position, such that a subsequent call to <ref refid="classXapian_1_1ValuePostingSource_187b22aac8422f80124b50a456d1d85b0" kindref="member">next()</ref> or <ref refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" kindref="member">skip_to()</ref> will move to the next matching position after <emphasis>did</emphasis>.</para></listitem></itemizedlist>
</para><para>Generally, this method should act like <ref refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" kindref="member">skip_to()</ref> and return true if that can be done at little extra cost.</para><para>Otherwise it should simply check if a particular docid is present, returning true if it is, and false if it isn&apos;t.</para><para>The default implementation calls <ref refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" kindref="member">skip_to()</ref> and always returns true.</para><para><ref refid="namespaceXapian" kindref="compound">Xapian</ref> will always call <ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref> on a <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> before calling this for the first time.</para><para>Note: in the case of a multi-database search, the docid specified is the docid in the single subdatabase relevant to this posting source. See the <emphasis><ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref></emphasis> method for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="378"/>
      </memberdef>
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_14bb7ea314dbd569f90f89731204cdc40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Xapian::ValuePostingSource::at_end</definition>
        <argsstring>() const </argsstring>
        <name>at_end</name>
        <reimplements refid="classXapian_1_1PostingSource_198831c9fdea1599f588cd9fef51bbeb5">at_end</reimplements>
        <briefdescription>
<para>Return true if the current position is past the last entry in this list. </para>        </briefdescription>
        <detaileddescription>
<para>At least one of <emphasis><ref refid="classXapian_1_1ValuePostingSource_187b22aac8422f80124b50a456d1d85b0" kindref="member">next()</ref></emphasis>, <emphasis><ref refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" kindref="member">skip_to()</ref></emphasis> or <emphasis><ref refid="classXapian_1_1ValuePostingSource_171868e54627098425820f7a76e259197" kindref="member">check()</ref></emphasis> will be called before this method is first called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="380"/>
      </memberdef>
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_16507d4d1a4119058890d92dfad53f40d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceXapian_18fa9094bebe1256a7be935a5ede87a64" kindref="member">Xapian::docid</ref></type>
        <definition>Xapian::docid Xapian::ValuePostingSource::get_docid</definition>
        <argsstring>() const </argsstring>
        <name>get_docid</name>
        <reimplements refid="classXapian_1_1PostingSource_17b1bd1fcd07d69204f70155588ae544a">get_docid</reimplements>
        <briefdescription>
<para>Return the current docid. </para>        </briefdescription>
        <detaileddescription>
<para>This method may assume that it will only be called when there is a &quot;current document&quot;. See <emphasis><ref refid="classXapian_1_1PostingSource_12e7637a323a90bea45f2dc68c916ea00" kindref="member">get_weight()</ref></emphasis> for details.</para><para>Note: in the case of a multi-database search, the returned docid should be in the single subdatabase relevant to this posting source. See the <emphasis><ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref></emphasis> method for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="382"/>
      </memberdef>
      <memberdef kind="function" id="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Xapian::ValuePostingSource::init</definition>
        <argsstring>(const Database &amp;db_)</argsstring>
        <name>init</name>
        <reimplements refid="classXapian_1_1PostingSource_181d793170b496022488c15c3508979b5">init</reimplements>
        <reimplementedby refid="classXapian_1_1ValueMapPostingSource_1e76de9cb534e96b7a0cc827d89eea8fc">init</reimplementedby>
        <reimplementedby refid="classXapian_1_1DecreasingValueWeightPostingSource_1abbd9d95d77e2aa947377c44d1bb733c">init</reimplementedby>
        <reimplementedby refid="classXapian_1_1ValueWeightPostingSource_1c3844351e28448d1de38fe089d626db4">init</reimplementedby>
        <param>
          <type>const <ref refid="classXapian_1_1Database" kindref="compound">Database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
<para>Set this <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> to the start of the list of postings. </para>        </briefdescription>
        <detaileddescription>
<para>This is called automatically by the matcher prior to each query being processed.</para><para>If a <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> is used for multiple searches, <emphasis><ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref></emphasis> will therefore be called multiple times, and must handle this by using the database passed in the most recent call.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>The database which the <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> should iterate through.</para></parameterdescription>
</parameteritem>
</parameterlist>
Note: the database supplied to this method must not be modified: in particular, the reopen() method should not be called on it.</para><para>Note: in the case of a multi-database search, a separate <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> will be used for each database (the separate PostingSources will be obtained using <emphasis><ref refid="classXapian_1_1PostingSource_1ecd88a39155ec5e04c752360b657f315" kindref="member">clone()</ref></emphasis>), and each <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> will be passed one of the sub-databases as the <emphasis>db</emphasis> parameter here. The <emphasis>db</emphasis> parameter will therefore always refer to a single database. All docids passed to, or returned from, the <ref refid="classXapian_1_1PostingSource" kindref="compound">PostingSource</ref> refer to docids in that single database, rather than in the multi-database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="384"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A posting source which generates weights from a value slot. </para>    </briefdescription>
    <detaileddescription>
<para>This is a base class for classes which generate weights using values stored in the specified slot. For example, <ref refid="classXapian_1_1ValueWeightPostingSource" kindref="compound">ValueWeightPostingSource</ref> uses sortable_unserialise to convert values directly to weights.</para><para>The upper bound on the weight returned is set to DBL_MAX. Subclasses should call <ref refid="classXapian_1_1PostingSource_10643cf1dfb1c3ed2dd1cf5ecfe3f3a10" kindref="member">set_maxweight()</ref> in their <ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">init()</ref> methods after calling <ref refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" kindref="member">ValuePostingSource::init()</ref> if they know a tighter bound on the weight. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="732">
        <label>Xapian::ValuePostingSource</label>
        <link refid="classXapian_1_1ValuePostingSource"/>
        <childnode refid="733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="734">
        <label>Xapian::ValueMapPostingSource</label>
        <link refid="classXapian_1_1ValueMapPostingSource"/>
        <childnode refid="732" relation="public-inheritance">
        </childnode>
      </node>
      <node id="736">
        <label>Xapian::DecreasingValueWeightPostingSource</label>
        <link refid="classXapian_1_1DecreasingValueWeightPostingSource"/>
        <childnode refid="735" relation="public-inheritance">
        </childnode>
      </node>
      <node id="735">
        <label>Xapian::ValueWeightPostingSource</label>
        <link refid="classXapian_1_1ValueWeightPostingSource"/>
        <childnode refid="732" relation="public-inheritance">
        </childnode>
      </node>
      <node id="733">
        <label>Xapian::PostingSource</label>
        <link refid="classXapian_1_1PostingSource"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="737">
        <label>Xapian::ValuePostingSource</label>
        <link refid="classXapian_1_1ValuePostingSource"/>
        <childnode refid="738" relation="public-inheritance">
        </childnode>
        <childnode refid="739" relation="usage">
          <edgelabel>value_it</edgelabel>
        </childnode>
        <childnode refid="740" relation="usage">
          <edgelabel>db</edgelabel>
        </childnode>
      </node>
      <node id="740">
        <label>Xapian::Database</label>
        <link refid="classXapian_1_1Database"/>
      </node>
      <node id="739">
        <label>Xapian::ValueIterator</label>
        <link refid="classXapian_1_1ValueIterator"/>
      </node>
      <node id="738">
        <label>Xapian::PostingSource</label>
        <link refid="classXapian_1_1PostingSource"/>
      </node>
    </collaborationgraph>
    <location file="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" line="330" bodyfile="/home/xapiandev/letor/xapian-core/include/xapian/postingsource.h" bodystart="330" bodyend="385"/>
    <listofallmembers>
      <member refid="classXapian_1_1ValuePostingSource_14bb7ea314dbd569f90f89731204cdc40" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>at_end</name></member>
      <member refid="classXapian_1_1ValuePostingSource_171868e54627098425820f7a76e259197" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>check</name></member>
      <member refid="classXapian_1_1PostingSource_1ecd88a39155ec5e04c752360b657f315" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>clone</name></member>
      <member refid="classXapian_1_1ValuePostingSource_124ed690d4249ce0929a1a1ff236124f1" prot="protected" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>db</name></member>
      <member refid="classXapian_1_1PostingSource_147d794241880cc691df1c3a3896d1050" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>get_description</name></member>
      <member refid="classXapian_1_1ValuePostingSource_16507d4d1a4119058890d92dfad53f40d" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>get_docid</name></member>
      <member refid="classXapian_1_1PostingSource_1620fa76be33e59e0bd5fc4caa479e6ee" prot="public" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>get_maxweight</name></member>
      <member refid="classXapian_1_1ValuePostingSource_1dd937d003f986ff60119bffbac277d76" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>get_termfreq_est</name></member>
      <member refid="classXapian_1_1ValuePostingSource_1c71b845c832955fe708d9ad6dbcf87e5" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>get_termfreq_max</name></member>
      <member refid="classXapian_1_1ValuePostingSource_173743991ef0f5a2818d56c94e9e019f4" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>get_termfreq_min</name></member>
      <member refid="classXapian_1_1PostingSource_12e7637a323a90bea45f2dc68c916ea00" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>get_weight</name></member>
      <member refid="classXapian_1_1ValuePostingSource_1764328b2a7085e24393a94eb1d2b91e0" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>init</name></member>
      <member refid="classXapian_1_1PostingSource_17b5c506178f996e59ed641ad62520734" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>name</name></member>
      <member refid="classXapian_1_1ValuePostingSource_187b22aac8422f80124b50a456d1d85b0" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>next</name></member>
      <member refid="classXapian_1_1PostingSource_182e85d6113d9c8e72cbbf4b3362f3fd6" prot="protected" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>PostingSource</name></member>
      <member refid="classXapian_1_1PostingSource_16ad26dc173cf1ab175dea945ba2622e0" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>serialise</name></member>
      <member refid="classXapian_1_1PostingSource_10643cf1dfb1c3ed2dd1cf5ecfe3f3a10" prot="protected" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>set_maxweight</name></member>
      <member refid="classXapian_1_1ValuePostingSource_1f11095a4355f96d7bc12074a5a91cd93" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>skip_to</name></member>
      <member refid="classXapian_1_1ValuePostingSource_1efd7cda358e1dc81ccd72bfe7b0f940c" prot="protected" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>slot</name></member>
      <member refid="classXapian_1_1ValuePostingSource_1f961be7d3dcc2eb8b9e70744ce2c7597" prot="protected" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>started</name></member>
      <member refid="classXapian_1_1ValuePostingSource_1b9b4cc08e1ba2da73f059b2312ae3986" prot="protected" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>termfreq_est</name></member>
      <member refid="classXapian_1_1ValuePostingSource_13a7be278e6615876d57a254a60826c2f" prot="protected" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>termfreq_max</name></member>
      <member refid="classXapian_1_1ValuePostingSource_130f64f26a6faddc3f24b8c00e2ba5d0b" prot="protected" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>termfreq_min</name></member>
      <member refid="classXapian_1_1PostingSource_1b3312a9172b1881c354faf3d2d9b585d" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>unserialise</name></member>
      <member refid="classXapian_1_1ValuePostingSource_1ddc0e75dc4ad4cfcf1f2d807bc3b32c4" prot="protected" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>value_it</name></member>
      <member refid="classXapian_1_1ValuePostingSource_1ccbffc6b7f573e9a41fc234a410a1ec3" prot="public" virt="non-virtual"><scope>Xapian::ValuePostingSource</scope><name>ValuePostingSource</name></member>
      <member refid="classXapian_1_1PostingSource_1679981b0badcc1a6308d4cbf8c5de7a0" prot="public" virt="virtual"><scope>Xapian::ValuePostingSource</scope><name>~PostingSource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
